---
title: "dv_ai_survey"
author: "CorrelAid e.V."
date: "12/12/2024"
format: 
  html:
    code-fold: false
    echo: false
    toc: true
    toc-location: left
    toc-expand: 2
project:
     execute-dir: project
---
```{r}
#| warning: false

library(tidyverse)
library(here)
library(ggthemes)
library(colorBlindness)
source(here("R-tools/helpers.R"))
source(here("R-tools/config.R"))
library(ggplot2); theme_set(theme_few())


df <- readr::read_delim("data/cleaned.csv")

res <- nrow(df)

cat("Total respondents: ", res, "\n")
```


```{r}
library(showtext)
library(systemfonts)
dv_black <- "#20201e"
dv_dark_blue <- "#1d5ca5"
dv_blue <- "#68aee3"
dv_green <- "#75ad3f"

theme_dv <- ggplot2::theme_minimal(
  base_size = 14,
  base_family = "Atkinson Hyperlegible"
) +
  ggplot2::theme(
    legend.position = "top",
    plot.title = element_text(face = "bold", size = 16, colour = dv_black),
    plot.title.position = "plot"
  )

options(ggplot2.discrete.colour= palette.colors(4, palette = "R4"))

theme_set(theme_dv)
```


# KI-Nutzung

```{r}
#| warning: false
#| label: fig-Q3

labels <- tibble(
  Q3 = c(TRUE, FALSE, NA),
  Q3_label = c("Ja", "Nein", "Keine Antwort")
)

df_count <- df %>%
  count(Q3) %>%
  mutate(percentage = n / sum(n) * 100) %>% 
  left_join(labels, by = "Q3")

# Plot the data
ggplot(df_count, aes(x = forcats::fct_reorder(Q3_label, c(2,1,3)), y = n)) +
  geom_bar(stat = "identity", fill = dv_black) + 
  geom_text(aes(label = paste0(n , " (", round(percentage, 1), "%)")), 
            vjust = -0.5,  # Adjust vertical position of the text
            size = 5) +  # Adjust text size
  labs(
    title = str_wrap(Q3_Text, width = 75),
    x = NULL,
    y = "Anzahl",
    caption = "CC-BY 4.0"
  ) +
  expand_limits(y = max(df_count$n) * 1.1)  

```

```{r}
#| warning: false
#| label: fig-Q9xQ3

df_temp <- df %>%
  mutate(Q3 = case_when(
    is.na(Q3) ~ "Keine Antwort",
    Q3 == TRUE ~ "Ja",
    Q3 == FALSE ~ "Nein",
    TRUE ~ as.character(Q3)  
  )) %>%
  filter(Q3 != "Keine Antwort")

ggplot(df_temp, aes(x = Q9)) + 
  geom_density(aes(fill = Q3), color = dv_black, alpha = 0.5) + 
  scale_fill_colorblind()+
  labs(
    title = str_wrap("KI Nutzung vs Einschätzung", 75),
    x = "Einschätzung",
    y = "Density",
    fill = "KI-Nutzung"  
  ) +
  theme(
    axis.text.y = element_blank(), 
    axis.ticks.y = element_blank()
  ) +
  annotate("text", x = 0, y = -0.0005, label = "Hype", color = dv_black) +
  annotate("text", x = 98, y = -0.0005, label = "Mehrwert", color = dv_black)
```

## KI ermöglicht...
```{r}
Q8_Options
df_opps <- df %>% 
  select(starts_with("Q8"), -Q8_open) %>% 
  pivot_longer(cols = everything(), 
               names_to = "question", 
               values_to = "response") %>%
  filter(!is.na(response))  %>% 
  left_join(Q8_Options, by = "question")

df_opps %>% 
  ggplot(aes(x = label, y = response))+
  geom_boxplot()+
  coord_flip()
```

# Anwendungen von KI

```{r}
#| warning: false
#| label: fig-Q4

Q4_Options$label_clean <- clean_options(Q4_Options$label)

df_long <- df %>%
  select(starts_with("Q4"), -Q4_open) %>% 
  pivot_longer(cols = everything(), 
               names_to = "question", 
               values_to = "response") %>%
  filter(response == TRUE)  

total_responses <- nrow(df_long)

response_counts <- df_long %>%
  count(question, name = "Count") %>% 
  left_join(Q4_Options, by = "question")

response_counts <- response_counts %>%
  mutate(Percentage = Count / total_responses * 100)

ggplot(response_counts, aes(x = forcats::fct_reorder(label_clean, Percentage), y = Percentage)) +
  geom_bar(stat = "identity", fill = dv_dark_blue) +
  labs(
    title = str_wrap(Q4_Text, width = 75),
    x = NULL,
    y = "Prozent der befragten Organisationen"
  ) +
  coord_flip()+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))
```

# Herausforderungen

Die wichtigsten drei Herausforderungen

::: {.panel-tabset}

## Grafik
```{r}
df_long <- df %>%
  select(starts_with("Q5"), -Q5_open, -Q5_9) %>% 
  pivot_longer(cols = starts_with("Q5"), 
               names_to = "question", 
               values_to = "rank") %>% 
  left_join(Q5_Options_cleaned, by = "question")

df_long %>% 
  group_by(rank) %>% 
  mutate(med_rank = median(rank)) %>% 
  ggplot(aes(x = forcats::fct_reorder(label, -med_rank), y = rank)) + 
  geom_boxplot(fill = dv_blue)+
  scale_y_continuous(transform = "reverse", breaks = seq(min(df_long$rank), max(df_long$rank), 1))+
  coord_flip()+
  labs(x = NULL, y = "Ranking", title = str_wrap("Größte Herausforderungen für aktive Nutzung: Datenschutz und Know-How", width = 60))

```

```{r}
df_long <- df %>%
  select(starts_with("Q5"), -Q5_open, -Q5_9) %>% 
  pivot_longer(cols = starts_with("Q5"), 
               names_to = "question", 
               values_to = "rank") %>% 
  left_join(Q5_Options_cleaned, by = "question")
df_long %>% 
  group_by(label) %>% 
  mutate(med_rank = median(rank)) %>% 
  group_by(label, med_rank, rank) %>% 
  summarize(median_rank = mean(med_rank), n = n()) %>% 
  ggplot(aes(y = n, x = forcats::fct_reorder(label, -med_rank), fill = as.character(rank))) + 
  geom_col(position = "stack")+
  coord_flip()+
  labs(x = NULL)
```

## Daten 
```{r}
df_long %>% 
  group_by(label) %>% 
  summarize(mittelwert_rank = mean(rank) %>% round(2),
            median_rank = median(rank),
            quantil_25 = quantile(rank, 0.25),
            quantil_75 = quantile(rank, 0.75), 
            interquartilsabstand = quantil_75 - quantil_25) %>% 
  knitr::kable()
```

:::

```{r}
#| label: fig-Q5xQ3
#| warning: false

df_long <- df %>%
  select(starts_with("Q5"), Q3, -Q5_open, -Q5_9) %>% 
  pivot_longer(cols = starts_with("Q5"), 
               names_to = "question", 
               values_to = "rank") %>%
  mutate(question = str_replace(question, "Q5_", ""), 
         Q3 = factor(Q3, levels = c(FALSE, TRUE), labels = c("Nein", "Ja")),  
         question = factor(question, levels = as.character(1:length(Q5_Options_cleaned)), 
                           labels = Q5_Options_cleaned))  

df_filtered <- df_long %>%
  filter(!is.na(Q3)) 

ggplot(df_filtered, aes(x = rank, fill = Q3, color = Q3)) +
  geom_histogram(binwidth = 1, alpha = 0.5, position = "identity", boundary = 0) +  
  scale_x_continuous(breaks = 1:10) +  
  facet_wrap(~ question, scales = "free_x", ncol = 3) + 
  labs(title = "Rangliste Herausforderungen bei der KI-Nutzung:",
       x = "Rank",
       y = "Count",
       fill = "KI-Nutzung",
       color = "KI-Nutzung") +
  theme(strip.text = element_text(size = 8))
```

### Offene Fragen

```{r}
#| warning: false
#| echo: false
q11 <- readr::read_delim("data/open_Q11.csv")

q15 <- readr::read_delim("data/open_Q15.csv")
```

#### Welche KI-Anwendung empfiehlst du dringend anderen Vereinen und wieso?

Die Top 3 dringenden Empfehlungen wurden folgendermaßen begründet:

```{r}
filtered_summaries <- q11 %>%
  filter(extracted_app %in% c("ChatGPT", "Keine Empfehlung", "Canva")) %>%
  arrange(desc(count)) %>% 
  select(extracted_app, summary, count) 

knitr::kable(filtered_summaries, col.names = c("App", "Zusammenfassung", "Anzahl"))
```

#### Wenn du einem Entwickler von KI etwas mit auf den Weg geben könntest, was wäre es? Was denkst du, sollte man bei der Entwicklung von KI-Anwendungen besonders berücksichtigen?

Es wurden drei Themen in den Antworten identifiziert:

```{r}
q15 %>%
  arrange(desc(Count)) %>% # Sort by Count
  select(Name = label, Beschreibung = description, Anzahl = Count) %>% # Reorder and exclude ID
  knitr::kable(col.names = c("Name", "Beschreibung", "Anzahl"))
```